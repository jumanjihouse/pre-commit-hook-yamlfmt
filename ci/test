#!/bin/bash
set -eEu
set -o pipefail

################################################################################
# Run the test harness.
# Invoke from the root of the git repo as "ci/test".
################################################################################
. ci/functions.sh

run python3 pre_commit_hooks/yamlfmt.py --help
echo

run pre-commit try-repo . --files .pre-commit-config.yaml

while read -r file; do
    run python3 pre_commit_hooks/yamlfmt.py --mapping 4 --sequence 6 --offset 4 "${file}"
done < <(find . -regex '.*\.yaml')

echo "[INFO] Use with xargs"
find . -regex '.*\.yaml' -print0 |
    xargs -0 python3 pre_commit_hooks/yamlfmt.py -m 4 -s 6 -o 4
echo

run python3 pre_commit_hooks/yamlfmt.py -m 2 -s 2 -o 0 .pre-commit-hooks.yaml

# Ensure we never break multidoc.
TMP_FILE="$(mktemp pre-commit-hook-yamlfmt-test.XXXXXXXXXXXXXXXXXXXX)"
run cp -f ci/multidoc-before.txt "${TMP_FILE}"
run python3 pre_commit_hooks/yamlfmt.py --mapping 4 --sequence 6 --offset 4 "${TMP_FILE}"
run diff ci/multidoc-after.yaml "${TMP_FILE}"
# If the diff fails, the temp file is still there to inspect.
run rm -f "${TMP_FILE}"

# Test preserve quotes
TMP_FILE="$(mktemp pre-commit-hook-yamlfmt-test.XXXXXXXXXXXXXXXXXXXX)"
run cp -f ci/quotes-before.txt "${TMP_FILE}"
run python3 pre_commit_hooks/yamlfmt.py --mapping 4 --sequence 6 --offset 4 --preserve-quotes "${TMP_FILE}"
run diff ci/quotes-after.txt "${TMP_FILE}"
# If the diff fails, the temp file is still there to inspect.
run rm -f "${TMP_FILE}"

# Test width setting
TMP_FILE="$(mktemp pre-commit-hook-yamlfmt-test.XXXXXXXXXXXXXXXXXXXX)"
run cp -f ci/test-long.txt "${TMP_FILE}"
run python3 pre_commit_hooks/yamlfmt.py --width 250 "${TMP_FILE}"
# Width=250, no change
run diff ci/test-long.txt "${TMP_FILE}"
run python3 pre_commit_hooks/yamlfmt.py --width 79 "${TMP_FILE}"
# Now we should see no lines > 81 (it has some offset in ruamel)
run grep -v -q '.\{82\}' "${TMP_FILE}"
run rm -f "${TMP_FILE}"

run pre-commit run --all-files --hook-stage manual
